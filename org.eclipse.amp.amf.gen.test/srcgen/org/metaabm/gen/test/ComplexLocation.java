/**
 * <copyright>
 *
 * Copyright (c) 2009 Metascape, LLC.
 * All rights reserved.   This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *   Metascape - Initial API and Implementation
 *
 * </copyright>
 *
*/
package org.metaabm.gen.test;

/**
 * Complex Location Java Implementation.
 * 
 * Generated by metaabm system: May 12, 2009 7:32:32 PM PDT in project: org.metaabm.gen.test  (testing) */

import static org.junit.Assert.*;

public class ComplexLocation {

	/**
	 * 
	 */

	private boolean locationGood = false;
	/**
	 * Constructs a new Complex Location.
	 */

	public ComplexLocation() {
		createUniqueID();
	}
	//todo, make this a useful value for evaluating compatibility of different versions of generated classes
	private static final long serialVersionUID = 89989998L;

	private String uniqueID;

	public String getUID() {
		return uniqueID;
	}

	public void createUniqueID() {
		uniqueID = org.apache.commons.lang.RandomStringUtils
				.randomAlphanumeric(5);
	}

	/**
	 * Clones the agent, ensuring that a unique id is assigned.
	 */
	public Object clone() {
		try {
			ComplexLocation clone = (ComplexLocation) super.clone();
			clone.createUniqueID();
			return clone;
		} catch (Exception e) {
			throw new RuntimeException("Unexpected cloning exception: " + e);
		}
	}

	@org.junit.Test
	public void dummy() {
		assertTrue(true);
	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testSelfAvailableCreate() {

		/*PROTECTED REGION ID(ComplexLocation_testSelfAvailableCreate_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

		}

		/*PROTECTED REGION ID(ComplexLocation_testSelfAvailableCreate_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testSelfAvailableWithin() {

		/*PROTECTED REGION ID(ComplexLocation_testSelfAvailableWithin_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			setLocationGood(true);

		}

		/*PROTECTED REGION ID(ComplexLocation_testSelfAvailableWithin_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testAgentHere() {

		/*PROTECTED REGION ID(ComplexLocation_testAgentHere_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			/*
			Spatial Functions:
			[here]
			 */
			ComplexMovementAgent agent = new ComplexMovementAgent();

			agent.setSomeBoolean(true);

		}

		/*PROTECTED REGION ID(ComplexLocation_testAgentHere_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testSelfAvailable() {

		/*PROTECTED REGION ID(ComplexLocation_testSelfAvailable_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			setLocationGood(true);

		}

		/*PROTECTED REGION ID(ComplexLocation_testSelfAvailable_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testSelfWithinBounds() {

		/*PROTECTED REGION ID(ComplexLocation_testSelfWithinBounds_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			setLocationGood(true);

		}

		/*PROTECTED REGION ID(ComplexLocation_testSelfWithinBounds_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * Gets the Location Good property for Complex Location.
	 * @return 
	 */

	public boolean isLocationGood() {
		return locationGood;
	}

	/**
	 * Sets the Location Good property for Complex Location.
	 * 
	 * @param _locationGood the new Location Good value
	 */

	public void setLocationGood(boolean _locationGood) {
		locationGood = _locationGood;
	}
}
