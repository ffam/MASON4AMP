/**
 * <copyright>
 *
 * Copyright (c) 2009 Metascape, LLC.
 * All rights reserved.   This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *   Metascape - Initial API and Implementation
 *
 * </copyright>
 *
*/
package org.metaabm.gen.test;

/**
 * Complex Movement Agent Java Implementation.
 * 
 * Generated by metaabm system: May 12, 2009 7:32:31 PM PDT in project: org.metaabm.gen.test  (testing) */

import static org.junit.Assert.*;

public class ComplexMovementAgent {

	/**
	 * 
	 */

	private boolean someBoolean = false;
	/**
	 * 
	 */

	private double[] withinSpace = {1, 1, 3, 3};
	/**
	 * 
	 */

	private int result = 0;
	/**
	 * 
	 */

	private SpatialStateEnum spatialState = SpatialStateEnum.option1;
	/**
	 * 
	 */

	private int vision = 4;
	/**
	 * Constructs a new Complex Movement Agent.
	 */

	public ComplexMovementAgent() {
		createUniqueID();
	}
	//todo, make this a useful value for evaluating compatibility of different versions of generated classes
	private static final long serialVersionUID = 89989998L;

	private String uniqueID;

	public String getUID() {
		return uniqueID;
	}

	public void createUniqueID() {
		uniqueID = org.apache.commons.lang.RandomStringUtils
				.randomAlphanumeric(5);
	}

	/**
	 * Clones the agent, ensuring that a unique id is assigned.
	 */
	public Object clone() {
		try {
			ComplexMovementAgent clone = (ComplexMovementAgent) super.clone();
			clone.createUniqueID();
			return clone;
		} catch (Exception e) {
			throw new RuntimeException("Unexpected cloning exception: " + e);
		}
	}

	@org.junit.Test
	public void dummy() {
		assertTrue(true);
	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testDieAll() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testDieAll_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			/*
			Spatial Functions:
			[]
			 */
			ComplexMovementAgent dieRandomAgent = new ComplexMovementAgent();

		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testDieAll_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testNegateSpatialThenIdentity() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testNegateSpatialThenIdentity_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			/*
			Spatial Functions:
			[neighbor]
			 */
			ComplexLocation locationGoodMove = new ComplexLocation();

			if (locationGoodMove.isLocationGood()) {

			}

			if (!(locationGoodMove.isLocationGood())) {
				setSomeBoolean(true);

			}

		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testNegateSpatialThenIdentity_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testNegateSpatialWithIdentity() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testNegateSpatialWithIdentity_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			/*
			Spatial Functions:
			[neighbor]
			 */
			ComplexMovementAgent moverNotNeighbor = new ComplexMovementAgent();

			setSomeBoolean(true);

		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testNegateSpatialWithIdentity_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testHostHere() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testHostHere_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			/*
			Spatial Functions:
			[here]
			 */
			ComplexLocation location = new ComplexLocation();

			location.setLocationGood(true);

		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testHostHere_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testConnectRandomOther() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testConnectRandomOther_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			/*
			Spatial Functions:
			[]
			 */
			ComplexMovementAgent complexMovementAgent = new ComplexMovementAgent();

		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testConnectRandomOther_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testSetRandomOther() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testSetRandomOther_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			/*
			Spatial Functions:
			[]
			 */
			ComplexMovementAgent complexMovementAgentCopy = new ComplexMovementAgent();

			complexMovementAgentCopy.setSomeBoolean(true);

		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testSetRandomOther_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testSetRandomOtherIf() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testSetRandomOtherIf_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{
			/* 
			Evaluation:
			Expression:
			
			 */

			/*
			Spatial Functions:
			[]
			 */
			ComplexMovementAgent complexMovementAgentCopyCopy = new ComplexMovementAgent();

			if (complexMovementAgentCopyCopy.isSomeBoolean()) {
				complexMovementAgentCopyCopy.setSomeBoolean(false);

			}

		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testSetRandomOtherIf_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testSetRandomPostQuery() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testSetRandomPostQuery_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		boolean testSetRandomPostQueryRandomBoolean = true;

		if (isSomeBoolean()) {
			{

				/*
				Spatial Functions:
				[]
				 */
				ComplexMovementAgent complexMovementAgentCopyCopyCopy = new ComplexMovementAgent();

				complexMovementAgentCopyCopyCopy.setSomeBoolean(true);

			}
		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testSetRandomPostQuery_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}

	/**
	 * .
	 */

	@org.junit.Test
	public void testParallelSpatial() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testParallelSpatial_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			/*
			Spatial Functions:
			[neighbor]
			 */
			ComplexLocation parallelSelect1 = new ComplexLocation();

		}

		{

			/*
			Spatial Functions:
			[neighbor]
			 */
			ComplexLocation parallelSelect2 = new ComplexLocation();

		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testParallelSpatial_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testParallelRoot() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testParallelRoot_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			{

				{

					int testParallelRootResultAddUnit = getResult() + 1;

					setResult(testParallelRootResultAddUnit);

					int testParallelRootResultAddUnitCopyCopy = getResult() + 1;

					setResult(getResult() + 1);

					int testParallelRootResultAddUnitCopy = getResult() + 1;

					setResult(getResult() + 1);

				}
			}
		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testParallelRoot_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}

	/**
	 * .
	 */

	@org.junit.Test
	public void testParallelWithNetwork() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testParallelWithNetwork_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			/*
			Spatial Functions:
			[neighbor]
			 */
			ComplexMovementAgent parallelNetwork1 = new ComplexMovementAgent();

		}

		{

			/*
			Spatial Functions:
			[available]
			 */
			ComplexLocation parallelMovement = new ComplexLocation();

		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testParallelWithNetwork_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testNestedStatements() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testNestedStatements_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{

			{

				if (getSpatialState() == SpatialStateEnum.option1
						&& isSomeBoolean() == false) {
					{
						/* 
						Evaluation:
						Expression:
						targetLocation.isLocationGood()
						 */

						/*
						Spatial Functions:
						[within]
						 */
						ComplexLocation targetLocation = new ComplexLocation();

						setSomeBoolean(true);

					}

				}

			}

		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testNestedStatements_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * .
	 */

	@org.junit.Test
	public void testHostHereCondition() {

		/*PROTECTED REGION ID(ComplexMovementAgent_testHostHereCondition_Pre) ENABLED START*/
		//Pre-Conditions Here
		/*PROTECTED REGION END*/

		{
			/* 
			Evaluation:
			Expression:
			complexMovementAgentCopyCopyCopyCopy.isLocationGood()
			 */

			/*
			Spatial Functions:
			[here]
			 */
			ComplexLocation complexMovementAgentCopyCopyCopyCopy = new ComplexLocation();

			setSomeBoolean(true);

		}

		/*PROTECTED REGION ID(ComplexMovementAgent_testHostHereCondition_Post) ENABLED START*/
		//Post-Conditions Here
		/*PROTECTED REGION END*/

	}
	/**
	 * Gets the Some Boolean property for Complex Movement Agent.
	 * @return 
	 */

	public boolean isSomeBoolean() {
		return someBoolean;
	}

	/**
	 * Sets the Some Boolean property for Complex Movement Agent.
	 * 
	 * @param _someBoolean the new Some Boolean value
	 */

	public void setSomeBoolean(boolean _someBoolean) {
		someBoolean = _someBoolean;
	}
	/**
	 * Gets the Within Space property for Complex Movement Agent.
	 * @return 
	 */

	public double[] getWithinSpace() {
		return withinSpace;
	}

	/**
	 * Sets the Within Space property for Complex Movement Agent.
	 * 
	 * @param _withinSpace the new Within Space value
	 */

	public void setWithinSpace(double[] _withinSpace) {
		withinSpace = _withinSpace;
	}
	/**
	 * Gets the Result property for Complex Movement Agent.
	 * @return 
	 */

	public int getResult() {
		return result;
	}

	/**
	 * Sets the Result property for Complex Movement Agent.
	 * 
	 * @param _result the new Result value
	 */

	public void setResult(int _result) {
		result = _result;
	}
	/**
	 * Gets the Spatial State property for Complex Movement Agent.
	 * @return 
	 */

	public SpatialStateEnum getSpatialState() {
		return spatialState;
	}

	/**
	 * Sets the Spatial State property for Complex Movement Agent.
	 * 
	 * @param _spatialState the new Spatial State value
	 */

	public void setSpatialState(SpatialStateEnum _spatialState) {
		spatialState = _spatialState;
	}
	/**
	 * Gets the Vision property for Complex Movement Agent.
	 * @return 
	 */

	public int getVision() {
		return vision;
	}

	/**
	 * Sets the Vision property for Complex Movement Agent.
	 * 
	 * @param _vision the new Vision value
	 */

	public void setVision(int _vision) {
		vision = _vision;
	}
}
